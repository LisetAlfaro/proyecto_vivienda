# Generated by Django 2.1 on 2018-10-05 21:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nomencladores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaTrabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Área de Trabajo')),
                ('numero', models.CharField(blank=True, max_length=3, validators=[django.core.validators.MaxLengthValidator(3), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')], verbose_name='Número')),
            ],
            options={
                'verbose_name': 'Área de Trabajo',
                'verbose_name_plural': 'Áreas de Trabajo',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='CentroTrabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Centro de trabajo')),
                ('numero', models.PositiveSmallIntegerField(blank=True, verbose_name='Número')),
                ('oc', models.BooleanField(default=False, verbose_name='Oficina Central')),
                ('municipio', models.ForeignKey(help_text='Municipio donde está ubicado el centro', on_delete=django.db.models.deletion.CASCADE, related_name='ubicacion_work', to='nomencladores.Municipio')),
            ],
            options={
                'verbose_name': 'Centro de Trabajo',
                'verbose_name_plural': 'Centro de Trabajo',
                'ordering': ['numero', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=9, unique=True, validators=[django.core.validators.MaxLengthValidator(9), django.core.validators.RegexValidator('[a-zA-Z ]', message='Este campo solo puede contener letras')], verbose_name='Género')),
                ('sigla', models.CharField(max_length=1, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(1), django.core.validators.RegexValidator('[a-zA-Z ]', message='Este campo solo puede contener letras')], verbose_name='Inicial')),
            ],
            options={
                'verbose_name': 'Género',
                'verbose_name_plural': 'Géneros',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='PersonaJuridica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, validators=[django.core.validators.MaxLengthValidator(30), django.core.validators.RegexValidator('[a-zA-Z ]', message='Este campo solo puede contener letras')])),
                ('direccion_numero', models.PositiveSmallIntegerField(blank=True, verbose_name='Número')),
                ('telefono', models.CharField(blank=True, max_length=8, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')], verbose_name='Teléfono Fijo')),
                ('movil', models.CharField(blank=True, max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')], verbose_name='Teléfono Movil')),
                ('email_address', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('codigo_nit', models.CharField(max_length=11)),
                ('codigo_reuup', models.CharField(max_length=11)),
                ('direccion_calle', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.Calle', verbose_name='Calle')),
                ('municipio', models.ForeignKey(help_text='Municipio donde recide la persona', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.Municipio', verbose_name='Municipio')),
            ],
            options={
                'verbose_name': 'Persona Jurídica',
                'verbose_name_plural': 'Personas Jurídicas',
            },
        ),
        migrations.CreateModel(
            name='PersonaNatural',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, validators=[django.core.validators.MaxLengthValidator(30), django.core.validators.RegexValidator('[a-zA-Z ]', message='Este campo solo puede contener letras')])),
                ('direccion_numero', models.PositiveSmallIntegerField(blank=True, verbose_name='Número')),
                ('telefono', models.CharField(blank=True, max_length=8, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')], verbose_name='Teléfono Fijo')),
                ('movil', models.CharField(blank=True, max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')], verbose_name='Teléfono Movil')),
                ('email_address', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('apellidos', models.CharField(max_length=50, validators=[django.core.validators.MaxLengthValidator(50), django.core.validators.RegexValidator('[a-zA-Z ]', message='Este campo solo puede contener letras')])),
                ('ci', models.CharField(max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11, message='Este campo no puede tener menos de 11 caracteres'), django.core.validators.MaxLengthValidator(11, message='Este campo no puede tener más de 11 caracteres'), django.core.validators.RegexValidator('[0-9]', message='Este campo solo puede contener números')])),
                ('direccion_calle', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.Calle', verbose_name='Calle')),
                ('direccion_entrecalle1', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='persona_entrecalle1', to='nomencladores.Calle', verbose_name='Primera Entrecalle')),
                ('direccion_entrecalle2', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='persona_entrecalle2', to='nomencladores.Calle', verbose_name='Segunda Entrecalle')),
                ('genero', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dpv_persona.Genero', verbose_name='Género')),
                ('municipio', models.ForeignKey(help_text='Municipio donde recide la persona', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.Municipio', verbose_name='Municipio')),
            ],
            options={
                'verbose_name': 'Persona Natural',
                'verbose_name_plural': 'Personas Naturales',
                'ordering': ['ci', 'apellidos'],
            },
        ),
    ]
